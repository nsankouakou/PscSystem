// <auto-generated />
using System;
using Entities.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(pscContext))]
    partial class pscContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("Entities.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Contact")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("contact")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("email")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("IdPhoto")
                        .HasColumnName("id_photo")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProfil")
                        .HasColumnName("id_profil")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<short?>("IsUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_user")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Login")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("login")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MotDePasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("mot_de_passe")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Nom")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nom")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Prenoms")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prenoms")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdPhoto")
                        .HasName("id_photo");

                    b.HasIndex("IdProfil")
                        .HasName("id_profil");

                    b.ToTable("agent","psc");
                });

            modelBuilder.Entity("Entities.Models.Bac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateDebut")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_debut")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateDerogation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_derogation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateFin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_fin")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Diametre")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("diametre")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurMaxiZoneIncertitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_maxi_zone_incertitude")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurMaximalJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_maximal_jauge")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurMiniExplotation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_mini_explotation")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurMiniZoneIncertitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_mini_zone_incertitude")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurTotalReference")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_total_reference")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdStatut")
                        .HasColumnName("id_statut")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdTypeBac")
                        .HasColumnName("id_type_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdTypeToit")
                        .HasColumnName("id_type_toit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("MasseDuToit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("masse_du_toit")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Repere")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("repere")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("TonnageBrut")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tonnage_brut")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("TonnageNet")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tonnage_net")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeNonPompable")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_non_pompable")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeReel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_reel")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeTheorique")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_theorique")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_total")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdStatut")
                        .HasName("id_statut");

                    b.HasIndex("IdTypeBac")
                        .HasName("id_type_bac");

                    b.HasIndex("IdTypeToit")
                        .HasName("id_type_toit");

                    b.ToTable("bac","psc");
                });

            modelBuilder.Entity("Entities.Models.Caracteristique", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("GrandeurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("grandeur_id")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Libelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("libelle")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("caracteristique","psc");
                });

            modelBuilder.Entity("Entities.Models.CaracteristiqueProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdCaracteristique")
                        .HasColumnName("id_caracteristique")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduit")
                        .HasColumnName("id_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdUnite")
                        .HasColumnName("id_unite")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Valeur")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("valeur")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdCaracteristique")
                        .HasName("id_caracteristique");

                    b.HasIndex("IdProduit")
                        .HasName("id_produit");

                    b.HasIndex("IdUnite")
                        .HasName("id_unite");

                    b.ToTable("caracteristique_produit","psc");
                });

            modelBuilder.Entity("Entities.Models.EnvoiProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<double?>("BswApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("BswAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToitApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToitAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<short?>("CreateJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_jauge")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("CreerPar")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creer_par")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateEnvoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_envoi")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_modification")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuinze")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quinze")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteQuizeAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_quize_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("GsvApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gsv_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("GsvAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gsv_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurCreuxApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_creux_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurCreuxAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_creux_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBac")
                        .HasColumnName("id_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdJaugeCree")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_jauge_cree")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduit")
                        .HasColumnName("id_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("ModifierPar")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modifier_par")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Observation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("observation")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Operateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("operateur")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<double?>("PiedEauApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("PiedEauAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Provenance")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("provenance")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("TemperatureAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Vcf")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vcf")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEauApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEauAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEnvoye")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_envoye")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VoulumeCreuxAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("voulume_creux_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdBac")
                        .HasName("id_bac");

                    b.HasIndex("IdProduit")
                        .HasName("id_produit");

                    b.ToTable("envoi_produit","psc");
                });

            modelBuilder.Entity("Entities.Models.Fonctionnalite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Libelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("libelle")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("fonctionnalite","psc");
                });

            modelBuilder.Entity("Entities.Models.Grandeur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Libelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("libelle")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Symbole")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("symbole")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("grandeur","psc");
                });

            modelBuilder.Entity("Entities.Models.HistoModifEnvoiProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<double?>("BswApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("BswAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToitApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToitAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<short?>("CreateJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_jauge")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("CreerPar")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creer_par")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateEnvoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_envoi")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_modification")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuinze")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quinze")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteQuizeAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_quize_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("GsvApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gsv_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("GsvAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gsv_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurCreuxApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_creux_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurCreuxAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_creux_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdAgent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_agent")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBac")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdEnvoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_envoi")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdJaugeCree")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_jauge_cree")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("ModifierPar")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modifier_par")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Observation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("observation")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Operateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("operateur")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<double?>("PiedEauApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("PiedEauAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Provenance")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("provenance")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("TemperatureAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Vcf")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vcf")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEauApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEauAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEnvoye")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_envoye")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VoulumeCreuxAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("voulume_creux_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("histo_modif_envoi_produit","psc");
                });

            modelBuilder.Entity("Entities.Models.HistoModifJauge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<double?>("Bsw")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_jauge")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_modification")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuize")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quize")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAT")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_t")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_jauge")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdAgent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_agent")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBac")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_jauge")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdStatutBac")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_statut_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Observations")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("observations")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<double?>("PiedEau")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Vcf")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vcf")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreux")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEau")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_jauge")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("histo_modif_jauge","psc");
                });

            modelBuilder.Entity("Entities.Models.HistoModifReceptionProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<double?>("BswApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("BswAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToitApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToitAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<short?>("CreateJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_jauge")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("CreerPar")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creer_par")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_modification")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateReception")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_reception")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuinze")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quinze")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteQuizeAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_quize_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("GsvApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gsv_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("GsvAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gsv_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurCreuxApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_creux_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurCreuxAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_creux_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdAgent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_agent")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBac")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdJaugeCree")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_jauge_cree")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdReception")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_reception")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("ModifierPar")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modifier_par")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Nsv")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Observation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("observation")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Operateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("operateur")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<double?>("PiedEauApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("PiedEauAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Provenance")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("provenance")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("TemperatureAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Vcf")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vcf")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEauApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEauAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeRecu")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_recu")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VoulumeCreuxAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("voulume_creux_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("histo_modif_reception_produit","psc");
                });

            modelBuilder.Entity("Entities.Models.HistoModifTransfert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_modification")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateTransfert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_transfert")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuinzeBacDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quinze_bac_destination")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuinzeBacSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quinze_bac_source")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Hauteur")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurProduitBacDestinationApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_produit_bac_destination_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurProduitBacDestinationAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_produit_bac_destination_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurProduitBacSourceApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_produit_bac_source_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurProduitBacSourceAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_produit_bac_source_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdAgent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_agent")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBacDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_bac_destination")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBacSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_bac_source")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdJaugeDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_jauge_destination")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdJaugeSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_jauge_source")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdTransfert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_transfert")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvApresBacDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_apres_bac_destination")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvApresBacSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_apres_bac_source")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvAvantBacDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_avant_bac_destination")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvAvantBacSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_avant_bac_source")
                        .HasColumnType("double(32,2)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeATBacDestinationApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_a_t_bac_destination_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeATBacDestinationAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_a_t_bac_destination_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeATBacSourceApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_a_t_bac_source_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeATBacSourceAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_a_t_bac_source_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxBacDestinationApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_bac_destination_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxBacDestinationAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_bac_destination_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxBacSourceApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_bac_source_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxBacSourceAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_bac_source_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("histo_modif_transfert","psc");
                });

            modelBuilder.Entity("Entities.Models.HistoriqueJauge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<double?>("Bsw")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_jauge")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuize")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quize")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAT")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_t")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_jauge")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdAgent")
                        .HasColumnName("id_agent")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBac")
                        .HasColumnName("id_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduit")
                        .HasColumnName("id_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdStatutBac")
                        .HasColumnName("id_statut_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Observations")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("observations")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<double?>("PiedEau")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Vcf")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vcf")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreux")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEau")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_jauge")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdAgent")
                        .HasName("id_agent");

                    b.HasIndex("IdBac")
                        .HasName("id_bac");

                    b.HasIndex("IdProduit")
                        .HasName("id_produit");

                    b.HasIndex("IdStatutBac")
                        .HasName("id_statut_bac");

                    b.ToTable("historique_jauge","psc");
                });

            modelBuilder.Entity("Entities.Models.IntervalleBaremage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Debut")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("debut")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Fin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("fin")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBac")
                        .HasColumnName("id_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("SensIntervalleDebut")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sens_intervalle_debut")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SensIntervalleFin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sens_intervalle_fin")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdBac")
                        .HasName("id_bac");

                    b.ToTable("intervalle_baremage","psc");
                });

            modelBuilder.Entity("Entities.Models.Licence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateDebut")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_debut")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateFin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_fin")
                        .HasDefaultValueSql("NULL");

                    b.Property<short?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_active")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Module")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("module")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("NombreJour")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nombre_jour")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("licence","psc");
                });

            modelBuilder.Entity("Entities.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Action")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Controlleur")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("FonctionaliteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Fonctionalite_id")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Icon")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("IdParent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("LibelleMenu")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("OrdreMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Url")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("menu","psc");
                });

            modelBuilder.Entity("Entities.Models.MenuProfil", b =>
                {
                    b.Property<int>("Menuid")
                        .HasColumnName("menuid")
                        .HasColumnType("int(11)");

                    b.Property<int>("Profilid")
                        .HasColumnName("profilid")
                        .HasColumnType("int(11)");

                    b.HasKey("Menuid", "Profilid");

                    b.ToTable("menu_profil","psc");
                });

            modelBuilder.Entity("Entities.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("CheminFichier")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chemin_fichier")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Extension")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("extension")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("photo","psc");
                });

            modelBuilder.Entity("Entities.Models.PlageDensiteTemperature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuinzeMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quinze_max")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuinzeMin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quinze_min")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<short?>("PourPetroleBrut")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pour_petrole_brut")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("TemperatureMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature_max")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("TemperatureMin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature_min")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("plage_densite_temperature","psc");
                });

            modelBuilder.Entity("Entities.Models.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuizeMaxi")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quize_maxi")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DentiteAQuizeMini")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dentite_a_quize_mini")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Designation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("designation")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<short?>("EstPretroleBrut")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("est_pretrole_brut")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdTypeProduit")
                        .HasColumnName("id_type_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatutCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("IdTypeProduit")
                        .HasName("id_type_produit");

                    b.ToTable("produit","psc");
                });

            modelBuilder.Entity("Entities.Models.ProduitBac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<short?>("Actif")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("actif")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Bsw")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_modification")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuize")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quize")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAT")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_t")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurMesure")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_mesure")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBac")
                        .HasColumnName("id_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduit")
                        .HasColumnName("id_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdUnite")
                        .HasColumnName("id_unite")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("PiedEau")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Vcf")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vcf")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEau")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeMesure")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_mesure")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdBac")
                        .HasName("id_bac");

                    b.HasIndex("IdProduit")
                        .HasName("id_produit");

                    b.HasIndex("IdUnite")
                        .HasName("id_unite");

                    b.ToTable("produit_bac","psc");
                });

            modelBuilder.Entity("Entities.Models.Profil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Libelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("libelle")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("profil","psc");
                });

            modelBuilder.Entity("Entities.Models.ProfilFonctionnalite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdFonctionnalite")
                        .HasColumnName("id_fonctionnalite")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProfil")
                        .HasColumnName("id_profil")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdFonctionnalite")
                        .HasName("id_fonctionnalite");

                    b.HasIndex("IdProfil")
                        .HasName("id_profil");

                    b.ToTable("profil_fonctionnalite","psc");
                });

            modelBuilder.Entity("Entities.Models.ReceptionProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<double?>("BswApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("BswAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bsw_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToitApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("CorrectToitAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correct_toit_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<short?>("CreateJauge")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_jauge")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("CreerPar")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creer_par")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_modification")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateReception")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_reception")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuinze")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quinze")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteQuizeAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_quize_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("GsvApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gsv_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("GsvAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gsv_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurCreuxApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_creux_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurCreuxAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_creux_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBac")
                        .HasColumnName("id_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdJaugeCree")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_jauge_cree")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduit")
                        .HasColumnName("id_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("ModifierPar")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modifier_par")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Observation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("observation")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Operateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("operateur")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<double?>("PiedEauApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("PiedEauAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pied_eau_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Provenance")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("provenance")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("TemperatureAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Vcf")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vcf")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEauApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeEauAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_eau_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeRecu")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_recu")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VoulumeCreuxAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("voulume_creux_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdBac")
                        .HasName("id_bac");

                    b.HasIndex("IdProduit")
                        .HasName("id_produit");

                    b.ToTable("reception_produit","psc");
                });

            modelBuilder.Entity("Entities.Models.Statut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Libelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("libelle")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("statut","psc");
                });

            modelBuilder.Entity("Entities.Models.TableBaremage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<double?>("Coefficient")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("coefficient")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdIntervalleBaremage")
                        .HasColumnName("id_intervalle_baremage")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Valeur")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("valeur")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdIntervalleBaremage")
                        .HasName("id_intervalle_baremage");

                    b.ToTable("table_baremage","psc");
                });

            modelBuilder.Entity("Entities.Models.TableVolumeDeplace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<double?>("Colonne")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("colonne")
                        .HasColumnType("double(32,3)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBac")
                        .HasColumnName("id_bac")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Ligne")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ligne")
                        .HasColumnType("double(32,3)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeDeplace")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_deplace")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdBac")
                        .HasName("id_bac");

                    b.ToTable("table_volume_deplace","psc");
                });

            modelBuilder.Entity("Entities.Models.Transfert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateTransfert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_transfert")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuinzeBacDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quinze_bac_destination")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("DensiteAQuinzeBacSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("densite_a_quinze_bac_source")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Hauteur")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurProduitBacDestinationApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_produit_bac_destination_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurProduitBacDestinationAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_produit_bac_destination_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurProduitBacSourceApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_produit_bac_source_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("HauteurProduitBacSourceAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hauteur_produit_bac_source_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdAgent")
                        .HasColumnName("id_agent")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBacDestination")
                        .HasColumnName("id_bac_destination")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdBacSource")
                        .HasColumnName("id_bac_source")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdJaugeDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_jauge_destination")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdJaugeSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_jauge_source")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduit")
                        .HasColumnName("id_produit")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvApresBacDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_apres_bac_destination")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvApresBacSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_apres_bac_source")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvAvantBacDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_avant_bac_destination")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("NsvAvantBacSource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nsv_avant_bac_source")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("temperature")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeATBacDestinationApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_a_t_bac_destination_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeATBacDestinationAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_a_t_bac_destination_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeATBacSourceApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_a_t_bac_source_apres")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeATBacSourceAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_a_t_bac_source_avant")
                        .HasColumnType("double(11,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxBacDestinationApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_bac_destination_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxBacDestinationAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_bac_destination_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxBacSourceApres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_bac_source_apres")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("VolumeCreuxBacSourceAvant")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume_creux_bac_source_avant")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdAgent")
                        .HasName("id_agent");

                    b.HasIndex("IdBacDestination")
                        .HasName("id_bac_destination");

                    b.HasIndex("IdBacSource")
                        .HasName("id_bac_source");

                    b.HasIndex("IdProduit")
                        .HasName("id_produit");

                    b.ToTable("transfert","psc");
                });

            modelBuilder.Entity("Entities.Models.TypeBac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Libelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("libelle")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("type_bac","psc");
                });

            modelBuilder.Entity("Entities.Models.TypeProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Libelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("libelle")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("type_produit","psc");
                });

            modelBuilder.Entity("Entities.Models.TypeToit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<short?>("CorrectionDueAuToit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("correction_due_au_toit")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Libelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("libelle")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("type_toit","psc");
                });

            modelBuilder.Entity("Entities.Models.UniteMesure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<short?>("EstUniteReference")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("est_unite_reference")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdGrandeur")
                        .HasColumnName("id_grandeur")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<short?>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_default")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Libelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("libelle")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatutCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Symbole")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("symbole")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdGrandeur")
                        .HasName("id_grandeur");

                    b.ToTable("unite_mesure","psc");
                });

            modelBuilder.Entity("Entities.Models.ValeurConversionUnite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<double?>("ConstanteConversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("constante_conversion")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_creation")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdUniteDestination")
                        .HasColumnName("id_unite_destination")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdUniteOrigine")
                        .HasColumnName("id_unite_origine")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("ValeurConversionDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("valeur_conversion_destination")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("ValeurConversionOrigine")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("valeur_conversion_origine")
                        .HasColumnType("double(32,4)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("IdUniteDestination")
                        .HasName("id_unite_destination");

                    b.HasIndex("IdUniteOrigine")
                        .HasName("id_unite_origine");

                    b.ToTable("valeur_conversion_unite","psc");
                });

            modelBuilder.Entity("Entities.Models.Agent", b =>
                {
                    b.HasOne("Entities.Models.Photo", "IdPhotoNavigation")
                        .WithMany("Agent")
                        .HasForeignKey("IdPhoto")
                        .HasConstraintName("agent_ibfk_2");

                    b.HasOne("Entities.Models.Profil", "IdProfilNavigation")
                        .WithMany("Agent")
                        .HasForeignKey("IdProfil")
                        .HasConstraintName("agent_ibfk_1");
                });

            modelBuilder.Entity("Entities.Models.Bac", b =>
                {
                    b.HasOne("Entities.Models.Statut", "IdStatutNavigation")
                        .WithMany("Bac")
                        .HasForeignKey("IdStatut")
                        .HasConstraintName("bac_ibfk_4");

                    b.HasOne("Entities.Models.TypeBac", "IdTypeBacNavigation")
                        .WithMany("Bac")
                        .HasForeignKey("IdTypeBac")
                        .HasConstraintName("bac_ibfk_2");

                    b.HasOne("Entities.Models.TypeToit", "IdTypeToitNavigation")
                        .WithMany("Bac")
                        .HasForeignKey("IdTypeToit")
                        .HasConstraintName("bac_ibfk_3");
                });

            modelBuilder.Entity("Entities.Models.CaracteristiqueProduit", b =>
                {
                    b.HasOne("Entities.Models.Caracteristique", "IdCaracteristiqueNavigation")
                        .WithMany("CaracteristiqueProduit")
                        .HasForeignKey("IdCaracteristique")
                        .HasConstraintName("caracteristique_produit_ibfk_2");

                    b.HasOne("Entities.Models.Produit", "IdProduitNavigation")
                        .WithMany("CaracteristiqueProduit")
                        .HasForeignKey("IdProduit")
                        .HasConstraintName("caracteristique_produit_ibfk_1");

                    b.HasOne("Entities.Models.UniteMesure", "IdUniteNavigation")
                        .WithMany("CaracteristiqueProduit")
                        .HasForeignKey("IdUnite")
                        .HasConstraintName("caracteristique_produit_ibfk_3");
                });

            modelBuilder.Entity("Entities.Models.EnvoiProduit", b =>
                {
                    b.HasOne("Entities.Models.Bac", "IdBacNavigation")
                        .WithMany("EnvoiProduit")
                        .HasForeignKey("IdBac")
                        .HasConstraintName("envoi_produit_ibfk_2");

                    b.HasOne("Entities.Models.Produit", "IdProduitNavigation")
                        .WithMany("EnvoiProduit")
                        .HasForeignKey("IdProduit")
                        .HasConstraintName("envoi_produit_ibfk_1");
                });

            modelBuilder.Entity("Entities.Models.HistoriqueJauge", b =>
                {
                    b.HasOne("Entities.Models.Agent", "IdAgentNavigation")
                        .WithMany("HistoriqueJauge")
                        .HasForeignKey("IdAgent")
                        .HasConstraintName("historique_jauge_ibfk_1");

                    b.HasOne("Entities.Models.Bac", "IdBacNavigation")
                        .WithMany("HistoriqueJauge")
                        .HasForeignKey("IdBac")
                        .HasConstraintName("historique_jauge_ibfk_2");

                    b.HasOne("Entities.Models.Produit", "IdProduitNavigation")
                        .WithMany("HistoriqueJauge")
                        .HasForeignKey("IdProduit")
                        .HasConstraintName("historique_jauge_ibfk_3");

                    b.HasOne("Entities.Models.Statut", "IdStatutBacNavigation")
                        .WithMany("HistoriqueJauge")
                        .HasForeignKey("IdStatutBac")
                        .HasConstraintName("historique_jauge_ibfk_4");
                });

            modelBuilder.Entity("Entities.Models.IntervalleBaremage", b =>
                {
                    b.HasOne("Entities.Models.Bac", "IdBacNavigation")
                        .WithMany("IntervalleBaremage")
                        .HasForeignKey("IdBac")
                        .HasConstraintName("intervalle_baremage_ibfk_1");
                });

            modelBuilder.Entity("Entities.Models.Produit", b =>
                {
                    b.HasOne("Entities.Models.TypeProduit", "IdTypeProduitNavigation")
                        .WithMany("Produit")
                        .HasForeignKey("IdTypeProduit")
                        .HasConstraintName("produit_ibfk_1");
                });

            modelBuilder.Entity("Entities.Models.ProduitBac", b =>
                {
                    b.HasOne("Entities.Models.Bac", "IdBacNavigation")
                        .WithMany("ProduitBac")
                        .HasForeignKey("IdBac")
                        .HasConstraintName("produit_bac_ibfk_2");

                    b.HasOne("Entities.Models.Produit", "IdProduitNavigation")
                        .WithMany("ProduitBac")
                        .HasForeignKey("IdProduit")
                        .HasConstraintName("produit_bac_ibfk_1");

                    b.HasOne("Entities.Models.UniteMesure", "IdUniteNavigation")
                        .WithMany("ProduitBac")
                        .HasForeignKey("IdUnite")
                        .HasConstraintName("produit_bac_ibfk_3");
                });

            modelBuilder.Entity("Entities.Models.ProfilFonctionnalite", b =>
                {
                    b.HasOne("Entities.Models.Fonctionnalite", "IdFonctionnaliteNavigation")
                        .WithMany("ProfilFonctionnalite")
                        .HasForeignKey("IdFonctionnalite")
                        .HasConstraintName("profil_fonctionnalite_ibfk_2");

                    b.HasOne("Entities.Models.Profil", "IdProfilNavigation")
                        .WithMany("ProfilFonctionnalite")
                        .HasForeignKey("IdProfil")
                        .HasConstraintName("profil_fonctionnalite_ibfk_1");
                });

            modelBuilder.Entity("Entities.Models.ReceptionProduit", b =>
                {
                    b.HasOne("Entities.Models.Bac", "IdBacNavigation")
                        .WithMany("ReceptionProduit")
                        .HasForeignKey("IdBac")
                        .HasConstraintName("reception_produit_ibfk_2");

                    b.HasOne("Entities.Models.Produit", "IdProduitNavigation")
                        .WithMany("ReceptionProduit")
                        .HasForeignKey("IdProduit")
                        .HasConstraintName("reception_produit_ibfk_1");
                });

            modelBuilder.Entity("Entities.Models.TableBaremage", b =>
                {
                    b.HasOne("Entities.Models.IntervalleBaremage", "IdIntervalleBaremageNavigation")
                        .WithMany("TableBaremage")
                        .HasForeignKey("IdIntervalleBaremage")
                        .HasConstraintName("table_baremage_ibfk_1");
                });

            modelBuilder.Entity("Entities.Models.TableVolumeDeplace", b =>
                {
                    b.HasOne("Entities.Models.Bac", "IdBacNavigation")
                        .WithMany("TableVolumeDeplace")
                        .HasForeignKey("IdBac")
                        .HasConstraintName("table_volume_deplace_ibfk_1");
                });

            modelBuilder.Entity("Entities.Models.Transfert", b =>
                {
                    b.HasOne("Entities.Models.Agent", "IdAgentNavigation")
                        .WithMany("Transfert")
                        .HasForeignKey("IdAgent")
                        .HasConstraintName("transfert_ibfk_4");

                    b.HasOne("Entities.Models.Bac", "IdBacDestinationNavigation")
                        .WithMany("TransfertIdBacDestinationNavigation")
                        .HasForeignKey("IdBacDestination")
                        .HasConstraintName("transfert_ibfk_2");

                    b.HasOne("Entities.Models.Bac", "IdBacSourceNavigation")
                        .WithMany("TransfertIdBacSourceNavigation")
                        .HasForeignKey("IdBacSource")
                        .HasConstraintName("transfert_ibfk_1");

                    b.HasOne("Entities.Models.Produit", "IdProduitNavigation")
                        .WithMany("Transfert")
                        .HasForeignKey("IdProduit")
                        .HasConstraintName("transfert_ibfk_3");
                });

            modelBuilder.Entity("Entities.Models.UniteMesure", b =>
                {
                    b.HasOne("Entities.Models.Grandeur", "IdGrandeurNavigation")
                        .WithMany("UniteMesure")
                        .HasForeignKey("IdGrandeur")
                        .HasConstraintName("unite_mesure_ibfk_1");
                });

            modelBuilder.Entity("Entities.Models.ValeurConversionUnite", b =>
                {
                    b.HasOne("Entities.Models.UniteMesure", "IdUniteDestinationNavigation")
                        .WithMany("ValeurConversionUniteIdUniteDestinationNavigation")
                        .HasForeignKey("IdUniteDestination")
                        .HasConstraintName("valeur_conversion_unite_ibfk_2");

                    b.HasOne("Entities.Models.UniteMesure", "IdUniteOrigineNavigation")
                        .WithMany("ValeurConversionUniteIdUniteOrigineNavigation")
                        .HasForeignKey("IdUniteOrigine")
                        .HasConstraintName("valeur_conversion_unite_ibfk_1");
                });
#pragma warning restore 612, 618
        }
    }
}
